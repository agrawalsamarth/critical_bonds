#! /usr/bin/perl

$critical_bonds = "../critical_bonds-main/bin/critical_bonds";

sub USAGE {  print<<EOF;
NAME
       run-critical-bonds-on-LAMMPS-data

SYNOPSIS
       perl run-critical-bonds-on-LAMMPS-data <lammps-data-filename> [-o <cb-lammps-data-filename>] [-v]

DESCRIPTION
       This script takes a LAMMPS data file <lammps-data-filename>, runs critical_bonds on it,
       interprets all existing bonds as bond type 1, and saves a new LAMMPS data 
       file <cb-lammps-data-filename>, in which critical bonds have bond type 2.

       If called without the -o option, the outputfile is <lammps-data-filename>-cb.data

OPTIONS
    -o <outputfile>
       writes the created LAMMPS data file to the specified outputfile
    -2D
       assumes two-dimensionsal data, i.e., ignores the z-coordinate.
       By default, a 3D configuration is assumed.
    -v
       creates additional stdout.
EOF
exit
};

if ($#ARGV eq -1) { USAGE; }; 
foreach $iarg (0 .. $#ARGV) { $arg=$ARGV[$iarg]; ($field,$value)=split(/=/,$arg);
   if ($field eq "-v") { $verbose = "-v"; 
   } elsif ($field eq "-data") { $lammps_data=$value; if (-s "$lammps_data") { } else { print "file $lammps_data does not exist!\n"; exit; }; $outputfile="$lammps_data-cb.txt"; 
   } elsif ($field eq "-o")    { $outputfile=$value; 
   } elsif ($arg   eq "-o")    { $outputfile=$ARGV[$iarg+1]; 
   } elsif ($arg   eq "-2D")   { $dimensions="-2D";
   };
};

sub PRINT { if ($verbose) { print "[$0] $_[0]\n"; }; };

if (!$outputfile) { USAGE; }; 

PRINT("convert LAMMPS data to cb_input_filename");
PRINT(`perl convert-lammps-data-2-cb.pl $lammps_data $dimensions -o .tmp.txt $verbose`); 

PRINT("run critical_bonds");
PRINT(`$critical_bonds .tmp.txt lammps_data-cb.txt`); 

PRINT("convert critical_bonds result to LAMMPS data file with bond types 1 and 2"); 
PRINT(`perl convert-cb-2-lammps-data.pl .tmp.txt lammps_data-cb.txt -o $outputfile $verbose`); 

PRINT("convert LAMMPS data to cb_input_filename using non-critical bonds only");
PRINT(`perl convert-lammps-data-2-cb.pl $outputfile $dimensions -o .tmp1.txt -bondtype=1 $verbose`);

PRINT("run critical_bonds on the de-percolated configuration");
PRINT(`$critical_bonds .tmp1.txt .tmp1-cb.txt`);   
if (-s ".tmp1-cb.txt") { 
   $nc = `grep -c . .tmp1-cb.txt`+0;
   print "problem: The configuration with cut critical bonds is still percolated (remaining $nc critical bonds).\n"; 
} else {
   $nc = `grep -c . lammps_data-cb.txt`+0; 
   print "The $nc critical bonds are bond types 2 in $outputfile\n";
};
